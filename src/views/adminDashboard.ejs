<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Admin — Activity Log</title>
    <!-- Bootstrap CSS (CDN) -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        padding-top: 70px;
      }
      .stat-card {
        cursor: pointer;
      }
      .table-wrap {
        max-height: 65vh;
        overflow: auto;
      }
      .small-muted {
        font-size: 0.85rem;
        color: #6c757d;
      }
    </style>
  </head>
  <body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Admin</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#nav"
          aria-controls="nav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="nav">
          <ul class="navbar-nav ms-auto">
            <li class="nav-item">
              <a class="nav-link" href="/register">Add user</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/admin">Activity</a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/">Bulk Email</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/logout">Logout</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <main class="container">
      <div class="row mb-3">
        <div class="col-12">
          <h3 class="mb-0">Activity Log (Home)</h3>
          <p class="small-muted">
            Latest user activity on the platform. Use the stats cards to jump to
            other admin views.
          </p>
        </div>
      </div>

      <!-- Stats Row -->
      <div class="row g-3 mb-4">
        <div class="col-sm-6 col-md-3">
          <div id="btn-users" class="card stat-card shadow-sm p-3 text-center">
            <div class="h5">Users</div>
            <div id="usersCount" class="display-6">—</div>
            <div class="small-muted">Total registered users</div>
          </div>
        </div>

        <div class="col-sm-6 col-md-3">
          <div id="btn-admins" class="card stat-card shadow-sm p-3 text-center">
            <div class="h5">Admins</div>
            <div id="adminsCount" class="display-6">—</div>
            <div class="small-muted">Total admins</div>
          </div>
        </div>

        <div class="col-sm-6 col-md-3">
          <div
            id="btn-msgs-today"
            class="card stat-card shadow-sm p-3 text-center"
          >
            <div class="h5">Messages Today</div>
            <div id="messagesToday" class="display-6">—</div>
            <div class="small-muted">Total messages sent today</div>
          </div>
        </div>

        <div class="col-sm-6 col-md-3">
          <div
            id="btn-msgs-total"
            class="card stat-card shadow-sm p-3 text-center"
          >
            <div class="h5">Messages Total</div>
            <div id="messagesTotal" class="display-6">—</div>
            <div class="small-muted">All-time messages</div>
          </div>
        </div>
      </div>

      <!-- Activity Table -->
      <div class="row">
        <div class="col-12">
          <div class="card">
            <div
              class="card-header d-flex justify-content-between align-items-center"
            >
              <strong>Activity Log</strong>
              <div>
                <button
                  id="refreshBtn"
                  class="btn btn-sm btn-outline-secondary"
                >
                  Refresh
                </button>
                <select
                  id="limitSelect"
                  class="form-select form-select-sm d-inline-block"
                  style="width: 120px"
                >
                  <option value="25">25</option>
                  <option value="50" selected>50</option>
                  <option value="100">100</option>
                </select>
              </div>
            </div>
            <div class="card-body table-wrap p-0">
              <table class="table table-hover table-striped mb-0">
                <thead class="table-dark">
                  <tr>
                    <th scope="col">Time</th>
                    <th scope="col">User</th>
                    <th scope="col">Action</th>
                    <th scope="col">Detail</th>
                    <th scope="col">More</th>
                  </tr>
                </thead>
                <tbody id="activityBody">
                  <tr>
                    <td colspan="5" class="text-center py-4">Loading...</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div class="card-footer d-flex justify-content-between">
              <small id="paginationInfo">Page 1</small>
              <div>
                <button
                  id="prevPage"
                  class="btn btn-sm btn-outline-primary me-2"
                  disabled
                >
                  Prev
                </button>
                <button id="nextPage" class="btn btn-sm btn-primary">
                  Next
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Message Details Modal -->
    <div class="modal fade" id="messageModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Message Details</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div id="messageDetails">Loading...</div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS (bundle includes Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      (function () {
        const statsUrl = "/admin/api/stats";
        const activityUrl = "/admin/api/activity";
        const msgUrlBase = "/admin/api/messages";

        let page = 1;
        let limit = 50;

        const $usersCount = document.getElementById("usersCount");
        const $adminsCount = document.getElementById("adminsCount");
        const $messagesToday = document.getElementById("messagesToday");
        const $messagesTotal = document.getElementById("messagesTotal");
        const $activityBody = document.getElementById("activityBody");
        const $refreshBtn = document.getElementById("refreshBtn");
        const $limitSelect = document.getElementById("limitSelect");
        const $prevPage = document.getElementById("prevPage");
        const $nextPage = document.getElementById("nextPage");
        const $paginationInfo = document.getElementById("paginationInfo");

        async function fetchStats() {
          try {
            const res = await fetch(statsUrl, { credentials: "same-origin" });
            if (!res.ok) throw new Error("Failed to fetch stats");
            const data = await res.json();
            $usersCount.textContent = data.usersCount ?? "0";
            $adminsCount.textContent = data.adminsCount ?? "0";
            $messagesToday.textContent = data.messagesSentToday ?? "0";
            $messagesTotal.textContent = data.messagesSentTotal ?? "0";
          } catch (err) {
            console.error(err);
          }
        }

        function formatTime(iso) {
          try {
            const d = new Date(iso);
            return d.toLocaleString();
          } catch (e) {
            return iso;
          }
        }

        async function fetchActivity() {
          $activityBody.innerHTML =
            '<tr><td colspan="5" class="text-center py-4">Loading...</td></tr>';
          try {
            const res = await fetch(
              activityUrl + "?page=" + page + "&limit=" + limit,
              { credentials: "same-origin" }
            );
            if (!res.ok) throw new Error("Failed to fetch activity");
            const data = await res.json();
            const items = data.items || [];
            if (items.length === 0) {
              $activityBody.innerHTML =
                '<tr><td colspan="5" class="text-center py-4">No activity found</td></tr>';
            } else {
              $activityBody.innerHTML = items
                .map(
                  (it) => `
                <tr>
                  <td>${formatTime(it.time)}</td>
                  <td>${it.user || "—"}</td>
                  <td>${it.action}</td>
                  <td>${it.detail || "—"}</td>
                  <td><button class="btn btn-sm btn-outline-secondary" data-id="${
                    it.id || ""
                  }" onclick="showMessage(event)">View</button></td>
                </tr>
              `
                )
                .join("");
            }

            // pagination controls
            const total = data.total || 0;
            const pages = Math.max(1, Math.ceil(total / limit));
            $paginationInfo.textContent = `Page ${page} of ${pages}`;
            $prevPage.disabled = page <= 1;
            $nextPage.disabled = page >= pages;
          } catch (err) {
            console.error(err);
            $activityBody.innerHTML =
              '<tr><td colspan="5" class="text-center py-4 text-danger">Failed to load</td></tr>';
          }
        }

        async function showMessage(e) {
          const id = e.currentTarget.getAttribute("data-id");
          if (!id) return;
          const modalEl = document.getElementById("messageModal");
          const messageDetails = document.getElementById("messageDetails");
          messageDetails.textContent = "Loading...";
          const bsModal = new bootstrap.Modal(modalEl);
          bsModal.show();
          try {
            const res = await fetch(msgUrlBase + "/" + id, {
              credentials: "same-origin",
            });
            if (!res.ok) throw new Error("Failed to fetch message");
            const data = await res.json();
            messageDetails.innerHTML = `
              <p><strong>From:</strong> ${data.from || "—"}</p>
              <p><strong>Recipients:</strong> ${data.toCount ?? "—"}</p>
              <p><strong>Subject:</strong> ${data.subject || "—"}</p>
              <hr />
              <pre style="white-space:pre-wrap">${data.body || ""}</pre>
            `;
          } catch (err) {
            console.error(err);
            messageDetails.textContent = "Failed to load message details";
          }
        }

        // Expose for inline onclick
        window.showMessage = showMessage;

        // listeners
        $refreshBtn.addEventListener("click", () => {
          fetchStats();
          fetchActivity();
        });
        $limitSelect.addEventListener("change", (ev) => {
          limit = Number(ev.target.value);
          page = 1;
          fetchActivity();
        });
        $prevPage.addEventListener("click", () => {
          if (page > 1) {
            page--;
            fetchActivity();
          }
        });
        $nextPage.addEventListener("click", () => {
          page++;
          fetchActivity();
        });

        // load initial
        fetchStats();
        fetchActivity();
      })();
    </script>
  </body>
</html>
